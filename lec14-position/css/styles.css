/*
  La propiead nos permite posicionar los elementos. Hay algunos conceptos que
  debes conocer para entender esto.

  Flujo de renderizado -> Para norma general los elementos se dibujan de izquierda a derecha y de arriba abajo.
  El punto 0.0 de los elementos, por norma general, es la esquina superior izquierda.

  Espacio reservado -> Es el espacio que tiene un elemento asignado en el navegador.

  Elemento posicionado -> Esto significa que el elemento tiene la propiedad position con un valor distinto
  de "static", que es el valor que tiene esta propiedad por defecto.

  Stacin context -> Contexto de apilamiento. Es el orden en el que se apilarán las cajas que se superponen,
  dentro del contendor.

  Al posicionar un elemento se habilitan 5 propieades que podemos utilizar para mover los elementos
  en los 3 ejes.

  top -> EL elemento se moverá desde la parte superior la distancia que le hayamos indicado.

  right -> El elemento se moverá desde la parte derecha la distancia que le hayamos indicado.

  bottom -> El elemento se moverá desde la parte inferior la distancia que le hayamos indicado.

  left -> El elemento se moverá desde la parte izquierda la distancia que le hayamos indicado.

  z-index -> Nos permite mover el elemento en el contexto de apilamiento (eje x)

  NOTA: Si a un elemento le declaramos la propiead top  y/o left, las propieades bottom y/o right no
  funcionarán. Esto no se cumplirá si el elemento tiene position absolute o fixed y no tiene una medida de ancho y alto definido.

  Los posibles valores que le podemos dar a position son.
    Static -> Es el valor que tiene por defecto un elemento, con este valor el elemento NO ESTÁ POSICIONADO
    y por lo cual no podremos moverlo.

    Relative -> El elemento mantendrá su posición y medidas en el flujo de renderizado y mantendrá su espacio reservado.
    Si lo movemos lo hará usando su posición en el html como punto de referencia.

    Absolute -> El elemento perderá sus medidas y su espacio reservado. Si lo movemos usará el elemento padre
    posicionado (que tenga definido la propiead position con valor dinstinto de static) como referencia. 
    Si no tiene ninguno, usará el elemento HTML(VIEWPORT) como referencia para su posicionamiento.
    Además si es aplicado a un elemento de línea lo convertirá a un contexto de bloque para poder darle medidas.

    Fixed -> El elemento perderá sus medidas y su espacio reservado. Si lo movemos usará siempre el elemento HTML 
    (VIEWPORT) como referencia para su posicionamiento.
    Además, si es aplicado a un elemento de línea lo convertirá a un contexto
    de bloque para poder darle medidas. 
    
    Cabe resaltar, que el elemento se quedará fijo en esa posición aunque hagamos scroll.

    Sticky -> Es una mezcla de position relative y fixed.
    Al igual que relative, el elemento no perderá sus medidas y su sespacio reservado. Sin embargo, los valores top, left,
    btoom y right no servirán para mover el elemento, sino para indicarle en que punto pasará a tener un comportamiento
    de posicionamiento fixed.
    
    Cabe resaltar que cuando pase a tener un comportamiento fixed, se quedará fijado en el punto señalado, recorriendo el
    alto del elemento contenedor padre, siempre y cuando siga teniendo contenido.
    
    Por otro lado el fijado no funcionará si es que en el elemento contenedor padre se encuentra definido la propiedad
    scroll con un valor distinto de visible.

*/
* {
  box-sizing: border-box;
}

body {
  margin: 0;
  background-color: #333;
}

.box {
  width: 100px;
  height: 100px;
  text-align: center;
}

.container {
  width: 300px;
  height: 300px;
  /* background-color: lightskyblue; */
  position: absolute;
}

.box-1 {
  background-color: lightcoral;
  position: absolute;
  right: 0;
  bottom: 0;
  /* left: 100px; */
  /* position: relative; */
  /* right: -50px; */
  /* left: 50px; */
  /* right: 25px; */
  /* top: 50px; */
  /* bottom: 25px; */
  /* position: relative; */
  /* left: 100px; */
  /* top: 100px; */
}

.box-2 {
  background-color: lightgreen;
  position: absolute;
  right: 0;
  bottom: 0;
  /* bottom: 100px; */
  /* left: 100px; */
}

.link {
  position: absolute;
  background-color: lime;
  width: 200px;
  top: 50px;
}
