/*
  Colores
    La mayoría las pantallas funcionan con un modo de color aditivo,
    La suma de RGB da como resultado un blanco.
    Tenemos varias formas de dar color en CSS

      Keywords -> Palabras clave que representan colores https://www.w3.org/wiki/CSS/Properties/color/Keywords
      IMPORTANTE: Recordad que existe el color "transparent"

      CurrentColor: Es una palabra clave que hace referencia a un valor de color. Este valor puede ser tomando
      de la propiedad color definido en el mismo elemento o heredado de algún elemento padre.

      RGB/RGBA
        En el modo RGB tenemos tres canales (Red, Green, Blue) y tenemos 8 bits de color por canal, (cada bit
        tiene dos posibles valores 0 o 1) lo que significa que tenemos 2^8 posibles valores, que van desde 0
        hasta 255.

        Esto nos da un total de 255 * 255 * 255 = 16.581.375 colores.

        Su sintaxis es rgb(R,G,B)

        Si ponemos todos los canales a 0 tendremos un negro puro y si lo ponemos a 255 tendremos un blanco.

        Para movernos por la gama de grises debemos poner los 3 canales con el mismo valor, si ponemos los 3 canales
        a 128 tendremos el gris puro.

        El modo RGB nos da la opción de utilizar un cuarto canal que correspondería al canal alpha, es decir, la
        transparencia, y su valor va desde 0 a 1. Tenemos dos sintaxis para utilizar el canal alpha.
          rgba(R,G,B,A)
          rgb(R G B / A)
      
      HEXADECIMAL
        La notación hexadecimal es la más común en desarrollo web, se basa en los mismos principios que el RGB pero
        escrito en notación hexadecimal.

        El sistema hexadecimal es un sistema basado en 16 valores del 0 al 15
        Utiliza los dígitos del 0 al 9 y las letras de la A a la F.

        En este tipo de notación también necesitamos 256 valores.

        Se compone de 16 caracteres en parejas ya que 16*16 = 256
        0 1 2 3 4 5 6 7 8 9 A B C D E F
        0 1 2 3 4 5 6 7 8 9 A B C D E F

        Para indicar que vamos a usar notación hexadecimal debemos usar el símbolo de hash/almohadilla # y a
        continuación usaremos esta notación por parejas.
        #RRGGBB
        Cuando una pareja usa el mismo valor se puede omitir el segundo valor siempre que se haga en las 3 parejas.

        rgb(255,255,255) -> #FFFFFF -> #FFF
        rgb(0,0,0) -> #000000 -> #000

        También tenemos la opción de usar transparencias en hexadecimal añadiendo un cuarto canal que sigue
        las mismas normas.

        rgb(0 0 0 / .5) -> #00000080 ~> #0007

      HSL / HSLA
      El modo de color HSL es el más intuitivo para los humanos. Su nombre viene de las siglas Hue (tono)
      Saturation (saturación) y lightness (luminencia)

      El primer valor es el ángulo en el círculo cromático donde 0 y 360 será el color rojo.
      Hay ciertos valores que os pueden servir como referencia para relacionar mejor los colores
      con sus ángulos.
        0 -> rojo
        60 -> amarillo
        120 -> verde
        180 -> cyan
        240 -> azul
        300 -> magneta
      
      El segundo valor es la saturación o intensidad del color.
        0% -> gris
        100% -> color puro
      
      El tercer valor es la luminosidad del color
        0% -> negro, nada de luz
        100% -> blanco, luz máxima
      
      Nota: Es importante que aunque el valor de saturación o luminancia sea 0 hay que poner 0% si no,
      no funcionará.

      El modo HSL también admite transparencia y su sintaxis es la misma que la del modo RGB. Tenemos
      dos sintaxis disponbiles.
        hsla (h,s,l,a)
        hsl(h s l / a)
      En ambos casos el valor alpha va de 0 a 1

      Esisten otros cuatro modos de color en los que está trabajando que serían CMYK (Cyan, Magneta, Yellow y Black),
      HWB (Hue, Whiteness, Blackness), Lab(Lightness, distance a, distance b) y Lch(Lightness, chroma, hue). todos están
      en el borrador del módulo de color de nivel 4 pero aún no es estándar.
*/
* {
  box-sizing: border-box;
}

body {
  margin: 0;
  /* background-color: mediumorchid; */
  /* background-color: hsl(60, 100%, 50%); */
  /* background-color: hsl(60, 100%, 50%, 0.5); */
  background-color: hsl(60 100% 50% / 0.5);
  color: #333;
}

.main {
  /* color: aquamarine; */
  /* background-color: currentColor; */
}

.box {
  /* border-left: 100px solid red; */
  /* border-top: 100px solid transparent; */
  /* border-bottom: 100px solid transparent; */
  /* border-right: 100px solid green; */
  /* width: 0; */
  /* border-left: 50vw solid transparent; */
  /* border-right: 50vw solid transparent; */
  /* border-top: 100px solid blue; */
  /* width: 300px; */
  /* height: 300px; */
  /* background-color: lightcoral; */
  /* color: lime; */
  width: 200px;
  height: 200px;
  background-color: lightcoral;
  /* background-color: rgb(255, 255, 0); */
  /* background-color: rgba(255, 255, 255, 0.5); */
  /* background-color: rgb(255 255 0 / 0.5); */
  /* box-shadow: 5px 5px 10px rgb(0 0 0 / 0.5); */
  /* box-shadow: 5px 5px 5px #00000080; */
  /* box-shadow: 5px 5px 5px #0008; */
  box-shadow: 5px 5px 5px hsl(0 0% 0% / 0.5);
  border: 5px solid rgb(0 0 0 / 0.1);
  /* border: 5px solid; */
}